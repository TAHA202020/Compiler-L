/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.analysis;

import java.util.*;
import sc.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAProgramme(AProgramme node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListedecfonc(AListedecfonc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFonction(AFonction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMain(AMain node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListedecvar(AListedecvar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArguments(AArguments node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABloc(ABloc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAffectationInstruction(AAffectationInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASiInstruction(ASiInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATantqueInstruction(ATantqueInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARetourInstruction(ARetourInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAppelInstruction(AAppelInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEcrireInstruction(AEcrireInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALireInstruction(ALireInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFairetantqueInstruction(AFairetantqueInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFairetantque(AFairetantque node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALire(ALire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEcrire(AEcrire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAffectation(AAffectation node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASi(ASi node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATantque(ATantque node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARetour(ARetour node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAppel(AAppel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAppelSansPv(AAppelSansPv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpression(AExpression node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultiExpou(AMultiExpou node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASingleExpou(ASingleExpou node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultiExpet(AMultiExpet node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASingleExpet(ASingleExpet node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultiExpnon(AMultiExpnon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASingleExpnon(ASingleExpnon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultiExpComparaisonInf(AMultiExpComparaisonInf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASingleExpComparaisonInf(ASingleExpComparaisonInf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultiExpComparaisonEgale(AMultiExpComparaisonEgale node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASingleExpComparaisonEgale(ASingleExpComparaisonEgale node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultiExpAddition(AMultiExpAddition node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASingleExpAddition(ASingleExpAddition node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultiExpSub(AMultiExpSub node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASingleExpSub(ASingleExpSub node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultiExpMultiplication(AMultiExpMultiplication node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASingleExpMultiplication(ASingleExpMultiplication node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultiExpDiv(AMultiExpDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASingleExpDiv(ASingleExpDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultiExpCarre(AMultiExpCarre node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASingleExpCarre(ASingleExpCarre node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANombreExpressionPrimaire(ANombreExpressionPrimaire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPExpressionExpressionPrimaire(APExpressionExpressionPrimaire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAValBoolExpressionPrimaire(AValBoolExpressionPrimaire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAppelExpressionPrimaire(AAppelExpressionPrimaire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarExpressionPrimaire(AVarExpressionPrimaire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVraiValeurbool(AVraiValeurbool node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFauxValeurbool(AFauxValeurbool node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEntierType(AEntierType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABoolType(ABoolType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVvar(AVvar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarSimpleVar(AVarSimpleVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATableauVar(ATableauVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarSimpleVarname(AVarSimpleVarname node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarTabVarname(AVarTabVarname node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATypetab(ATypetab node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATabval(ATabval node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASinonbloc(ASinonbloc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVexpression(AVexpression node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpressionvexp(AExpressionvexp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEspaces(TEspaces node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCommentaire(TCommentaire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVirgule(TVirgule node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNombre(TNombre node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPv(TPv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRp(TRp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLp(TLp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAo(TAo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAf(TAf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCo(TCo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCf(TCf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSFaire(TSFaire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEntier(TEntier node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBool(TBool node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEgale(TEgale node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMainfc(TMainfc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSSi(TSSi node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAlors(TAlors node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSinon(TSinon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTantQue(TTantQue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFaire(TFaire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReturn(TReturn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOr(TOr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAnd(TAnd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNot(TNot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInf(TInf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCarre(TCarre node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVrai(TVrai node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFaux(TFaux node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWrite(TWrite node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRead(TRead node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdentif(TIdentif node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
