/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class AIdentifrealvalueSingleexpression extends PSingleexpression
{
    private TIdentif _identif_;
    private PCmp _cmp_;
    private PRealvalues _realvalues_;

    public AIdentifrealvalueSingleexpression()
    {
        // Constructor
    }

    public AIdentifrealvalueSingleexpression(
        @SuppressWarnings("hiding") TIdentif _identif_,
        @SuppressWarnings("hiding") PCmp _cmp_,
        @SuppressWarnings("hiding") PRealvalues _realvalues_)
    {
        // Constructor
        setIdentif(_identif_);

        setCmp(_cmp_);

        setRealvalues(_realvalues_);

    }

    @Override
    public Object clone()
    {
        return new AIdentifrealvalueSingleexpression(
            cloneNode(this._identif_),
            cloneNode(this._cmp_),
            cloneNode(this._realvalues_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAIdentifrealvalueSingleexpression(this);
    }

    public TIdentif getIdentif()
    {
        return this._identif_;
    }

    public void setIdentif(TIdentif node)
    {
        if(this._identif_ != null)
        {
            this._identif_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identif_ = node;
    }

    public PCmp getCmp()
    {
        return this._cmp_;
    }

    public void setCmp(PCmp node)
    {
        if(this._cmp_ != null)
        {
            this._cmp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cmp_ = node;
    }

    public PRealvalues getRealvalues()
    {
        return this._realvalues_;
    }

    public void setRealvalues(PRealvalues node)
    {
        if(this._realvalues_ != null)
        {
            this._realvalues_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._realvalues_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._identif_)
            + toString(this._cmp_)
            + toString(this._realvalues_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._identif_ == child)
        {
            this._identif_ = null;
            return;
        }

        if(this._cmp_ == child)
        {
            this._cmp_ = null;
            return;
        }

        if(this._realvalues_ == child)
        {
            this._realvalues_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._identif_ == oldChild)
        {
            setIdentif((TIdentif) newChild);
            return;
        }

        if(this._cmp_ == oldChild)
        {
            setCmp((PCmp) newChild);
            return;
        }

        if(this._realvalues_ == oldChild)
        {
            setRealvalues((PRealvalues) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
