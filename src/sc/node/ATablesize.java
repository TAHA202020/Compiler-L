/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class ATablesize extends PTablesize
{
    private TRb _rb_;
    private TNombre _nombre_;
    private TLb _lb_;

    public ATablesize()
    {
        // Constructor
    }

    public ATablesize(
        @SuppressWarnings("hiding") TRb _rb_,
        @SuppressWarnings("hiding") TNombre _nombre_,
        @SuppressWarnings("hiding") TLb _lb_)
    {
        // Constructor
        setRb(_rb_);

        setNombre(_nombre_);

        setLb(_lb_);

    }

    @Override
    public Object clone()
    {
        return new ATablesize(
            cloneNode(this._rb_),
            cloneNode(this._nombre_),
            cloneNode(this._lb_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATablesize(this);
    }

    public TRb getRb()
    {
        return this._rb_;
    }

    public void setRb(TRb node)
    {
        if(this._rb_ != null)
        {
            this._rb_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rb_ = node;
    }

    public TNombre getNombre()
    {
        return this._nombre_;
    }

    public void setNombre(TNombre node)
    {
        if(this._nombre_ != null)
        {
            this._nombre_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._nombre_ = node;
    }

    public TLb getLb()
    {
        return this._lb_;
    }

    public void setLb(TLb node)
    {
        if(this._lb_ != null)
        {
            this._lb_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lb_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._rb_)
            + toString(this._nombre_)
            + toString(this._lb_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._rb_ == child)
        {
            this._rb_ = null;
            return;
        }

        if(this._nombre_ == child)
        {
            this._nombre_ = null;
            return;
        }

        if(this._lb_ == child)
        {
            this._lb_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._rb_ == oldChild)
        {
            setRb((TRb) newChild);
            return;
        }

        if(this._nombre_ == oldChild)
        {
            setNombre((TNombre) newChild);
            return;
        }

        if(this._lb_ == oldChild)
        {
            setLb((TLb) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
